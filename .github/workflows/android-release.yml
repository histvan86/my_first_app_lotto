name: Android Release Build (APK only)

on:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.x"

      - name: Flutter pub get
        run: flutter pub get

      # --- google-services.json kiírása ---
      - name: Write google-services.json (simple)
        env:
          GOOGLE_JSON: ${{ secrets.FIREBASE_GOOGLE_SERVICES_JSON }}
        run: |
          set -e
          mkdir -p android/app
          printf '%s' "$GOOGLE_JSON" > android/app/google-services.json
          test -s android/app/google-services.json || (echo "google-services.json is empty" && exit 1)
          head -c 1 android/app/google-services.json | grep '{' >/dev/null || (echo "not JSON (no starting '{')" && exit 1)

      # --- gyors validáció + package_name ellenőrzés ---
      - name: Validate google-services.json + package name
        run: |
          python - <<'PY'
          import json
          p = "android/app/google-services.json"
          with open(p, "r", encoding="utf-8") as f:
            data = json.load(f)
          assert isinstance(data, dict), "Root is not a JSON object"
          assert "client" in data and data["client"], "Missing 'client' array"
          pkg = None
          for c in data["client"]:
            ai = c.get("client_info", {}).get("android_client_info", {})
            if "package_name" in ai:
              pkg = ai["package_name"]; break
          assert pkg, "package_name not found in JSON"
          expected = "com.histvan86.my_first_app_lotto"
          assert pkg == expected, f"package mismatch: {pkg} != {expected}"
          print("google-services.json OK for", pkg)
          PY

      # --- Build APK közvetlenül Gradle-lel ---
      - name: Make gradlew executable
        working-directory: android
        run: chmod +x ./gradlew

      - name: Build with Gradle (assembleRelease)
        working-directory: android
        run: ./gradlew :app:assembleRelease --no-daemon --stacktrace

      # --- APK feltöltése artefaktként ---
      - name: Upload APK artifact (from Gradle output)
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: |
            android/app/build/outputs/apk/release/*.apk
            android/app/build/outputs/apk/**/*.apk
